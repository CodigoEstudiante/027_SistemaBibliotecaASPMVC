
@{
    ViewBag.Title = "Libros";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<!-- DataTales Example -->
<div class="card shadow mb-4">
    <div class="card-header py-3 bg-primary">
        <h6 class="m-0 font-weight-bold text-white">Lista de libros</h6>
    </div>
    <div class="card-body">
        <div class="row">
            <div class="col-sm-12">
                <button class="btn btn-success btn-sm" type="button" onclick="abrirModal(null)">Crear Nuevo</button>
            </div>
        </div>
        <hr />
        <div class="row">
            <div class="col-sm-12">

                <div class="table-responsive">
                    <table class="table table-bordered" id="tabla" style="width:100%" cellspacing="0">
                        <thead>
                            <tr>
                                <th>Titulo</th>
                                <th>Autor</th>
                                <th>Categoria</th>
                                <th>Editorial</th>
                                <th>Ubicacion</th>
                                <th>Ejemplares</th>
                                <th>Estado</th>
                                <th></th>
                            </tr>
                        </thead>
                        <tfoot>
                            <tr>
                                <th>Titulo</th>
                                <th>Autor</th>
                                <th>Categoria</th>
                                <th>Editorial</th>
                                <th>Ubicacion</th>
                                <th>Ejemplares</th>
                                <th>Estado</th>
                                <th></th>
                            </tr>
                        </tfoot>
                        <tbody></tbody>
                    </table>
                </div>
            </div>
        </div>

    </div>
</div>



<!-- Modal -->
<div class="modal fade" id="FormModal" data-backdrop="static" data-keyboard="false" tabindex="-1" aria-labelledby="staticBackdropLabel" aria-hidden="true">
    <div class="modal-dialog modal-lg" role="document">
        <div class="modal-content">
            <div class="modal-header bg-primary text-white">
                <h5 class="modal-title" id="exampleModalLabel">Libro</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body">
                <input id="txtid" type="hidden" value="0" />
                <form id="formNivel">
                    <div class="row">
                        <div class="col-sm-6">
                            <div class="form-group">
                                <img id="imglibro" height="192" width="190" class="border border-dark" />
                            </div>
                            <div class="form-group">
                                <input class="form-control-file" type="file" id="filelibro" onchange="readURL(this);">
                            </div>
                        </div>
                        <div class="col-sm-6">
                            <div class="form-group">
                                <label for="txttitulo">Titulo</label>
                                <input type="text" class="form-control required" id="txttitulo" name="descripcion" autocomplete="off">
                            </div>
                            <div class="form-group">
                                <label for="cboautor">Autor</label>
                                <select id="cboautor" class="form-control"></select>
                            </div>
                            <div class="form-group">
                                <label for="cbocategoria">Categoria</label>
                                <select id="cbocategoria" class="form-control"></select>
                            </div>
                        </div>
                    </div>

                    <div class="row">
                        <div class="col-sm-6">
                            <div class="form-group">
                                <label for="cboeditorial">Editorial</label>
                                <select id="cboeditorial" class="form-control"></select>
                            </div>
                        </div>
                        <div class="col-sm-6">
                            <div class="form-group">
                                <label for="txtubicacion">Ubicacion</label>
                                <input type="text" class="form-control required" id="txtubicacion" name="descripcion" autocomplete="off">
                            </div>
                        </div>
                    </div>

                    <div class="row">
                        <div class="col-sm-6">
                            <div class="form-group">
                                <label for="txtejemplares">Ejemplares</label>
                                <input type="text" class="form-control required" id="txtejemplares" name="descripcion" autocomplete="off">
                            </div>
                        </div>
                        <div class="col-sm-6">
                            <div class="form-group">
                                <label for="cboEstado">Estado:</label>
                                <select id="cboEstado" class="form-control">
                                    <option value="1">Activo</option>
                                    <option value="0">No Activo</option>
                                </select>
                            </div>
                        </div>
                    </div>

                </form>

            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-danger" data-dismiss="modal">Cerrar</button>
                <button type="button" class="btn btn-primary" onclick="Guardar()">Guardar</button>
            </div>
        </div>
    </div>
</div>


@section scripts{

    <script>
        var tabladata;

        function readURL(input) {
            if (input.files && input.files[0]) {
                var reader = new FileReader();

                reader.onload = function (e) {
                    $('#imglibro')
                        .attr('src', e.target.result)
                        .width(190)
                        .height(192);
                };

                reader.readAsDataURL(input.files[0]);
            }
        }

        $(document).ready(function () {
            jQuery.ajax({
                url: '@Url.Action("ListarCategoria", "Biblioteca")',
                type: "GET",
                data: null,
                dataType: "json",
                contentType: "application/json; charset=utf-8",
                success: function (data) {
                    $.each(data.data, function (index, value) {
                        $("<option>").attr({ "value": value.IdCategoria }).text(value.Descripcion).appendTo("#cbocategoria");
                    });
                },
                error: function (error) {
                    console.log(error)
                }
            });

            jQuery.ajax({
                url: '@Url.Action("ListarAutor", "Biblioteca")',
                type: "GET",
                data: null,
                dataType: "json",
                contentType: "application/json; charset=utf-8",
                success: function (data) {
                    $.each(data.data, function (index, value) {
                        $("<option>").attr({ "value": value.IdAutor }).text(value.Descripcion).appendTo("#cboautor");
                    });
                },
                error: function (error) {
                    console.log(error)
                }
            });

            jQuery.ajax({
                url: '@Url.Action("ListarEditorial", "Biblioteca")',
                type: "GET",
                data: null,
                dataType: "json",
                contentType: "application/json; charset=utf-8",
                success: function (data) {
                    $.each(data.data, function (index, value) {
                        $("<option>").attr({ "value": value.IdEditorial }).text(value.Descripcion).appendTo("#cboeditorial");
                    });
                },
                error: function (error) {
                    console.log(error)
                }
            });

            tabladata = $('#tabla').DataTable({
                responsive:true,
                "ajax": {
                    "url": '@Url.Action("ListarLibro", "Biblioteca")',
                    "type": "GET",
                    "datatype": "json"
                },
                "columns": [
                    { "data": "Titulo" },
                    {
                        "data": "oAutor", render: function (data) {
                            return data.Descripcion
                        }
                    },
                    {
                        "data": "oCategoria", render: function (data) {
                            return data.Descripcion
                        }
                    },
                    {
                        "data": "oEditorial", render: function (data) {
                            return data.Descripcion
                        }
                    },
                    { "data": "Ubicacion" },
                    { "data": "Ejemplares" },
                    {
                        "data": "Estado", "render": function (data) {
                            if (data) {
                                return '<span class="badge badge-success p-2">Activo</span>'
                            } else {
                                return '<span class="badge badge-danger p-2">No Activo</span>'
                            }
                        }
                    },
                    {
                        "data": "IdLibro", "render": function (data, type, row, meta) {

                            return $("<button>").addClass("btn btn-primary btn-editar btn-sm").append(
                                $("<i>").addClass("fas fa-pen")
                            ).attr({ "data-informacion": JSON.stringify(row) })[0].outerHTML
                            +
                            $("<button>").addClass("btn btn-danger btn-eliminar btn-sm ml-2").append(
                                $("<i>").addClass("fas fa-trash")
                            ).attr({ "data-informacion": JSON.stringify(row) })[0].outerHTML;

                        },
                        "orderable": false,
                        "searchable": false,
                        "width": "90px"
                    }

                ],
                "language": {
                    "url": "//cdn.datatables.net/plug-ins/1.10.25/i18n/Spanish.json"
                }
            });
        });



        $(document).on('click', '.btn-editar', function (event) {
            var json = $(this).data("informacion")

            abrirModal(json)
        });

        function abrirModal(json) {
            $("#txtid").val(0);
            $("#imglibro").attr({ "src": "" });
            $("#filelibro").val("");
            $("#txttitulo").val("");
            $("#cboautor").val($("#cboautor option:first").val());
            $("#cbocategoria").val($("#cbocategoria option:first").val());
            $("#cboeditorial").val($("#cboeditorial option:first").val());
            $("#txtubicacion").val("");
            $("#txtejemplares").val("");
            $("#cboEstado").val(1);

            if (json != null) {

                $("#txtid").val(json.IdLibro);
                $("#imglibro").attr({ "src": "data:image/" + json.extension + ";base64," + json.base64 });
                $("#txttitulo").val(json.Titulo);
                $("#cboautor").val(json.oAutor.IdAutor);
                $("#cbocategoria").val(json.oCategoria.IdCategoria)
                $("#cboeditorial").val(json.oEditorial.IdEditorial)
                $("#txtubicacion").val(json.Ubicacion);
                $("#txtejemplares").val(json.Ejemplares);
                $("#cboEstado").val(json.Estado == true ? 1 : 0);
            }

            $('#FormModal').modal('show');
        }

        $(document).on('click', '.btn-eliminar', function (event) {
            var json = $(this).data("informacion")

            jQuery.ajax({
                url: '@Url.Action("EliminarLibro", "Biblioteca")',
                type: "POST",
                data: JSON.stringify({ id: json.IdLibro}),
                dataType: "json",
                contentType: "application/json; charset=utf-8",
                success: function (data) {

                    if (data.resultado) {
                        tabladata.ajax.reload();
                    } else {
                        alert("No se pudo eliminar")
                    }
                },
                error: function (error) {
                    console.log(error)
                },
                beforeSend: function () {

                },
            });
        });

        function Guardar() {

            var ImagenSeleccionada = ($("#filelibro"))[0].files[0];

            var objeto = {
                IdLibro: $("#txtid").val(),
                Titulo: $("#txttitulo").val(),
                oAutor: { IdAutor: $("#cboautor option:selected").val() },
                oCategoria: { IdCategoria: $("#cbocategoria option:selected").val() },
                oEditorial: { IdEditorial: $("#cboeditorial option:selected").val() },
                Ubicacion: $("#txtubicacion").val(),
                Ejemplares: $("#txtejemplares").val(),
                Estado: parseInt($("#cboEstado").val()) == 1 ? true : false
            }

            var request = new FormData();
            request.append("imagenArchivo", ImagenSeleccionada);
            request.append("objeto", JSON.stringify(objeto));

            jQuery.ajax({
                url: '@Url.Action("GuardarLibro", "Biblioteca")',
                type: "POST",
                data: request,
                processData: false,
                contentType : false,
                success: function (data) {

                    if (data.resultado) {
                        tabladata.ajax.reload();
                        $('#FormModal').modal('hide');
                    } else {
                        alert("No se pudo guardar los cambios")
                    }
                },
                error: function (error) {
                    console.log(error)
                },
                beforeSend: function () {

                },
            });

        }

        $.fn.inputFilter = function (inputFilter) {
            return this.on("input keydown keyup mousedown mouseup select contextmenu drop", function () {
                if (inputFilter(this.value)) {
                    this.oldValue = this.value;
                    this.oldSelectionStart = this.selectionStart;
                    this.oldSelectionEnd = this.selectionEnd;
                } else if (this.hasOwnProperty("oldValue")) {
                    this.value = this.oldValue;
                    this.setSelectionRange(this.oldSelectionStart, this.oldSelectionEnd);
                } else {
                    this.value = "";
                }
            });
        };

        $("#txtejemplares").inputFilter(function (value) {
            return /^-?\d*$/.test(value);
        });

    </script>

}
